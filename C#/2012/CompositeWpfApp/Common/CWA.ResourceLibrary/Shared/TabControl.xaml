<ResourceDictionary
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:ctl="clr-namespace:CWA.UIControls;assembly=CWA.UIControls"
xmlns:inf="clr-namespace:CWA.Infrastructure;assembly=CWA.Infrastructure">

    <!--TabControlStyle-->

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel>
                        <StackPanel IsItemsHost="True" DockPanel.Dock="Bottom" Orientation="Horizontal" />
                        <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- CloseTabButtonTemplate -->

    <ControlTemplate x:Key="CloseTabButtonTemplate"  TargetType="{x:Type Button}">
        <Border x:Name="CloseButtonBorder" Background="{TemplateBinding Background}" 
                Width="13" Height="Auto" CornerRadius="0,5,0,0" SnapsToDevicePixels="True" >
            <Canvas>
                <Path Stroke="White" Margin="3,4,0,0" StrokeThickness="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 6.1 6.1 M 6.1 0 L 0 6.1"/>
            </Canvas>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="CloseButtonBorder" Property="Background" Value="{DynamicResource CloseTabButtonBackgroundBrushOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="CloseButtonBorder" Property="Background" Value="{DynamicResource CloseTabButtonBackgroundBrushPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--TabItemClosable Style-->

    <Style TargetType="{x:Type ctl:TabItemClosable}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocuslessVisualStyle}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctl:TabItemClosable}">
                    <StackPanel Orientation="Horizontal" Margin="0,0,-2,0" >
                        <Border x:Name="TabBorder" Background="{DynamicResource TabItemInactiveBackgroundBrush}" 
                                BorderBrush="{DynamicResource ItemBorderBrush}" SnapsToDevicePixels="True" 
                                BorderThickness="1,1,1,1" CornerRadius="3,6,0,0">
                            <DockPanel>
                                <Button DockPanel.Dock="Right" x:Name="CloseTabButton"
                                        Template="{DynamicResource CloseTabButtonTemplate}"
                                        Background="{DynamicResource CloseTabButtonBackgroundBrush}" 
                                        Focusable="False" Command="inf:UICommands.CloseTabCommand"/>
                                <Border Padding="10,2,10,2">
                                    <ContentPresenter SnapsToDevicePixels="True" x:Name="Content" ContentSource="Header" 
                                        RecognizesAccessKey="True" Content="{TemplateBinding Header}" />
                                </Border>
                            </DockPanel>
                        </Border>
                        
                        <!--This can be used as a gap between tabs:-->
                        
                        <!--<Border x:Name="TabGapBorder" BorderBrush="{DynamicResource ItemBorderBrush}" 
                                    SnapsToDevicePixels="True" BorderThickness="0,0,0,1">
                            <Rectangle Width="2" Height="2"/>
                        </Border>-->
                        
                    </StackPanel>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                            <Setter Property="Panel.ZIndex" Value="1000"/>
                            <Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource TabItemSelectedBackgroundBrush}"/>
                            <Setter TargetName="TabBorder" Property="BorderThickness" Value="1,1,1,0"/>
                        </Trigger>
                        <Trigger Property="CanClose" Value="false">
                            <Setter TargetName="CloseTabButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="CanClose" Value="true">
                            <Setter TargetName="CloseTabButton" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="CloseTabButton" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="TabBorder" Value="{DynamicResource TabItemBackgroundBrushOver}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>